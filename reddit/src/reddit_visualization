import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta
import os

# --- Ensure output directory exists ---
os.makedirs("reddit/visualizations", exist_ok=True)

# --- Load labeled comment data ---
df = pd.read_csv("reddit/csvs/auto_labeled_reddit_comments.csv")

# Simulate a 'created' datetime if it's missing (for demo/testing)
if 'created' not in df.columns:
    import numpy as np
    df['created'] = pd.date_range(end=pd.Timestamp.today(), periods=len(df), freq="H")

df.rename(columns={"created": "datetime"}, inplace=True)
df["date"] = pd.to_datetime(df["datetime"]).dt.date
df["datetime"] = pd.to_datetime(df["datetime"])

# --- Map sentiment to numeric scores ---
sentiment_to_score = {"positive": 1, "neutral": 0, "negative": -1}
df["sentiment_score"] = df["sentiment"].map(sentiment_to_score)

# === Plot 1: Daily Average Comment Sentiment ===
daily_avg = df.groupby("date")["sentiment_score"].mean()

plt.figure(figsize=(14, 6))
plt.plot(daily_avg.index, daily_avg.values, label="Avg Comment Sentiment", linewidth=2)
plt.axhline(0, color='gray', linestyle='--', linewidth=1)
plt.title("Average Comment Sentiment Over Time", fontsize=16)
plt.xlabel("Date")
plt.ylabel("Sentiment Score")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.savefig("reddit/visualizations/daily_comment_sentiment.png")

# === Plot 2: Hourly Comment Sentiment (Past 7 Days) ===
df.set_index("datetime", inplace=True)
hourly_avg = df["sentiment_score"].resample("H").mean()
last_hour = hourly_avg.index.max()
start_hour = last_hour - timedelta(days=7)
weekly_hourly = hourly_avg.loc[start_hour:last_hour].fillna(0)

plt.figure(figsize=(14, 5))
plt.plot(weekly_hourly.index, weekly_hourly, label="Hourly Avg Sentiment", linewidth=1.5)
plt.axhline(0, color='gray', linestyle='--', linewidth=1)
plt.title("Hourly Comment Sentiment â€“ Past 7 Days", fontsize=14)
plt.xlabel("Datetime")
plt.ylabel("Avg Sentiment")
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.savefig("reddit/visualizations/hourly_comment_sentiment_week.png")
